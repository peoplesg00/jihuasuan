<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atli.provider.dao.AccountDao">

    <resultMap type="entity.Account" id="AccountMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="create_time" column="create_time" jdbcType="DATE"/>
        <result property="briefly" column="briefly" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="income" column="income" jdbcType="NUMERIC"/>
        <result property="expenditure" column="expenditure" jdbcType="NUMERIC"/>
        <result property="founder" column="founder" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AccountMap">
        select
        id, create_time ,briefly,type ,income, expenditure, founder
        from bill.account
        where id = #{id}
    </select>
    <!--按月份查询-->
    <select id="selectByMonth" resultType="entity.Account">
       select
        left(a.create_time,7)  create_time,SUM(income) as income ,SUM(expenditure) as expenditure,founder
        from
        bill.account a
        where a.founder=#{founder}
        GROUP BY left(a.create_time,7)
    </select>
    <!--按年份查询-->
    <select id="selectByYear" resultMap="AccountMap">
        select
        DATE_FORMAT(a.create_time,'%Y')  create_time,SUM(income) as income ,SUM(expenditure) as expenditure,founder
        from
        bill.account a
        where a.founder = #{founder}
        GROUP BY DATE_FORMAT(a.create_time,'%Y')
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccountMap">
        select
        id, create_time ,briefly,type ,income, expenditure, founder
        from bill.account
        where founder = #{founder}
        order by create_time ASC
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AccountMap">
        select
        id, create_time ,briefly,type ,income, expenditure, founder
        from bill.account
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="create_time != null and create_time != ''">
                and create_time = #{create_time}
            </if>
            <if test="briefly != null and briefly != ''">
                and briefly = #{briefly}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="income != null">
                and income = #{income}
            </if>
            <if test="expenditure != null">
                and expenditure = #{expenditure}
            </if>
            <if test="founder != null">
                and founder = #{founder}
            </if>
        </where>
    </select>
    <!--查询所有账单-->
    <select id="getAllAccount" resultMap="AccountMap">
        select * from bill.account order by create_time
    </select>
    <select id="adminByMonth" parameterType="int" statementType="CALLABLE" resultMap="AccountMap">
        {
        call bill.selectByMonth(
        #{offset,mode=IN},
        #{limit,mode=IN}
        )
        }
    </select>
    <select id="adminByYear" parameterType="int" statementType="CALLABLE" resultMap="AccountMap">
        {
        call bill.selectByYear(
        #{offset,mode=IN},
        #{limit,mode=IN}
        )
        }
    </select>
    <select id="adminByAll" parameterType="int" statementType="CALLABLE" resultMap="AccountMap">
        {
        call bill.selectByAll(
        #{offset,mode=IN},
        #{limit,mode=IN}
        )
        }
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into bill.account( id, create_time ,briefly,type ,income, expenditure, founder)
        values (#{id},now(), #{briefly},#{type},#{income}, #{expenditure}, #{founder})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update bill.account
        <set>
            <if test="create_time != null">
                create_time = now(),
            </if>
            <if test="briefly != null'">
                and briefly = #{briefly}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="income != null">
                income = #{income},
            </if>
            <if test="expenditure != null">
                expenditure = #{expenditure},
            </if>
            <if test="founder != null">
                founder = #{founder},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from bill.account where id = #{id}
    </delete>

    <!--通过日期删除-->
    <delete id="deleteByTime">
        delete from bill.account where left(create_time,#{length}) = #{create_time} and founder = #{founder}
    </delete>

</mapper>